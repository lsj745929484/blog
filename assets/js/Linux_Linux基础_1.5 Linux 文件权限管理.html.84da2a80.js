"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[443],{6262:(i,s)=>{s.A=(i,s)=>{const t=i.__vccOpts||i;for(const[i,a]of s)t[i]=a;return t}},8303:(i,s,t)=>{t.r(s),t.d(s,{comp:()=>l,data:()=>h});var a=t(641);const n=t.p+"assets/img/image-20250121112749613.f414aaa6.png",e={},l=(0,t(6262).A)(e,[["render",function(i,s){return(0,a.uX)(),(0,a.CE)("div",null,s[0]||(s[0]=[(0,a.Fv)('<h1 id="linux-文件权限管理" tabindex="-1"><a class="header-anchor" href="#linux-文件权限管理"><span>Linux 文件权限管理</span></a></h1><h2 id="权限分类" tabindex="-1"><a class="header-anchor" href="#权限分类"><span>权限分类</span></a></h2><table><thead><tr><th></th><th>权限针对文件，file</th><th>权限针对目录，directory</th></tr></thead><tbody><tr><td>读r，read</td><td>表示可以查看文件内容：cat</td><td>表示可以查看目录中存在的文件名称：ls</td></tr><tr><td>写w，write</td><td>表示可以更改文件的内容：vim修改，保存，退出</td><td>表示是否可以删除目录中的子文件或者新建子目录（rm/touch/mkdir）</td></tr><tr><td>执行x，executable</td><td>表示是否可以执行文件，一般指的是二进制文件或脚本文件</td><td>表示是否可以进入目录中（cd）</td></tr></tbody></table><h2 id="ll-h-看到的权限解读" tabindex="-1"><a class="header-anchor" href="#ll-h-看到的权限解读"><span>ll -h 看到的权限解读</span></a></h2><img src="'+n+'" alt="image-20250121112749613"><ul><li>Linux 中每一个文件都有自己的主任，并且有权限限制，限制主人的读、写、执行权限。<strong>（特列：root用户）</strong></li><li>限制其他人的读、写、执行权限。</li><li>限制组内的读、写、执行权限。</li><li>权限必须是 rwx 的顺序，如果没有对应的权限，则用 - 表示为空。比如只有读写权限，没有执行权限，比如：rw-</li></ul><h2 id="linux-七种文件类型" tabindex="-1"><a class="header-anchor" href="#linux-七种文件类型"><span>Linux 七种文件类型</span></a></h2><blockquote><p>后面带有 * 号标识的表示为常用类型</p></blockquote><table><thead><tr><th>标识</th><th style="text-align:center;">解释</th></tr></thead><tbody><tr><td><strong>-</strong>（*）</td><td style="text-align:center;">普通文件，如 touch 创建的文件</td></tr><tr><td><strong>d（*）</strong></td><td style="text-align:center;">文件夹，如 mkdir 创建的</td></tr><tr><td>l（*）</td><td style="text-align:center;">软连接，类似 windows 的快捷方式</td></tr><tr><td>b</td><td style="text-align:center;">块设备信息（如读取硬盘，光盘等 /dev/sda /dev/sdb）</td></tr><tr><td>p</td><td style="text-align:center;">管道文件</td></tr><tr><td>c</td><td style="text-align:center;">字符设备文件</td></tr><tr><td>s</td><td style="text-align:center;">socket文件，进程间通信文件，比如 mysql 生成的 mysql.sock</td></tr></tbody></table><h2 id="创建软连接" tabindex="-1"><a class="header-anchor" href="#创建软连接"><span>创建软连接</span></a></h2><h3 id="path-与软连接的区别" tabindex="-1"><a class="header-anchor" href="#path-与软连接的区别"><span>Path 与软连接的区别</span></a></h3><ol><li>Path 添加的是整个目录。</li><li>软连接，只对单个文件添加快捷方式。</li></ol><h3 id="使用软连接实现-path-一样的效果" tabindex="-1"><a class="header-anchor" href="#使用软连接实现-path-一样的效果"><span>使用软连接实现 Path 一样的效果</span></a></h3><p>去 Path 中默认的路径下，创建一个快捷方式，指向我们的代码雨命令</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/cmatrix/bin/cmatrix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/bin</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ln</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 命令的原路径</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 快捷方式的路径</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看-python-的软连接信息" tabindex="-1"><a class="header-anchor" href="#查看-python-的软连接信息"><span>查看 python 的软连接信息</span></a></h3><p>可以通过 <code>which</code> 命令查看命令的信息，然后通过<code>ll</code>命令查看命令的真实信息</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@MiWiFi-RA80-srv opt]# which python</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/usr/bin/python</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@MiWiFi-RA80-srv opt]# ll /usr/bin/python</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lrwxrwxrwx.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Jan</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 24</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 16:18</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/python</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">python2</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@MiWiFi-RA80-srv opt]#  which python2</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/usr/bin/python2</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@MiWiFi-RA80-srv opt]# ll /usr/bin/python2</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">lrwxrwxrwx.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 9</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Jan</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 24</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 16:18</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/python2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">python2.7</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 这个 python2.7 才是真正的可执行命令</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[root@MiWiFi-RA80-srv opt]# ll /usr/bin/python2.7</span></span>\n<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-rwxr-xr-x.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7144</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Nov</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 15</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  2023</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/bin/python2.7</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文件权限与数字转换" tabindex="-1"><a class="header-anchor" href="#文件权限与数字转换"><span>文件权限与数字转换</span></a></h2><h3 id="文件权限-字母、数字表示" tabindex="-1"><a class="header-anchor" href="#文件权限-字母、数字表示"><span>文件权限（字母、数字表示）</span></a></h3><table><thead><tr><th>权限</th><th>对应数字</th><th>意义</th></tr></thead><tbody><tr><td>r</td><td>4</td><td>可读</td></tr><tr><td>w</td><td>2</td><td>可写</td></tr><tr><td>z</td><td>1</td><td>可执行</td></tr></tbody></table><h3 id="文件权限数字字母转换练习" tabindex="-1"><a class="header-anchor" href="#文件权限数字字母转换练习"><span>文件权限数字字母转换练习</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>文件：/tmp/mima.txt</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>- rw- -w- rwx cc01 cc01   ---&gt;   user:4+2+0 group:0+2+0 other:4+2+1   ---&gt;   627</span></span>\n<span class="line"><span>- r-- rwx --x  cc01 devops   ---&gt;   user:4+0+0 group:4+2+1 other:0+0+1   ---&gt;   471</span></span>\n<span class="line"><span>- --x rw- rw- bob01 bob01   ---&gt;   user:0+0+1 group:4+2+0 other:4+2+0   ---&gt;   166</span></span>\n<span class="line"><span>- -w- -w- -w-jack01 aliyun01   ---&gt;   user:0+2+0 group:0+2+0 other:0+2+0   ---&gt;   222</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',23)]))}]]),h=JSON.parse('{"path":"/Linux/Linux%E5%9F%BA%E7%A1%80/1.5%20Linux%20%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86.html","title":"Linux 文件权限管理","lang":"zh-CN","frontmatter":{"description":"Linux 文件权限管理 权限分类 ll -h 看到的权限解读 image-20250121112749613 Linux 中每一个文件都有自己的主任，并且有权限限制，限制主人的读、写、执行权限。（特列：root用户） 限制其他人的读、写、执行权限。 限制组内的读、写、执行权限。 权限必须是 rwx 的顺序，如果没有对应的权限，则用 - 表示为空。比如...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/blog/Linux/Linux%E5%9F%BA%E7%A1%80/1.5%20Linux%20%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"AlanShelby Blog"}],["meta",{"property":"og:title","content":"Linux 文件权限管理"}],["meta",{"property":"og:description","content":"Linux 文件权限管理 权限分类 ll -h 看到的权限解读 image-20250121112749613 Linux 中每一个文件都有自己的主任，并且有权限限制，限制主人的读、写、执行权限。（特列：root用户） 限制其他人的读、写、执行权限。 限制组内的读、写、执行权限。 权限必须是 rwx 的顺序，如果没有对应的权限，则用 - 表示为空。比如..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-05T09:31:15.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-05T09:31:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux 文件权限管理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-05T09:31:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AlanShelby\\",\\"url\\":\\" https://lsj745929484.github.io/blog/\\"}]}"]]},"headers":[{"level":2,"title":"权限分类","slug":"权限分类","link":"#权限分类","children":[]},{"level":2,"title":"ll -h 看到的权限解读","slug":"ll-h-看到的权限解读","link":"#ll-h-看到的权限解读","children":[]},{"level":2,"title":"Linux 七种文件类型","slug":"linux-七种文件类型","link":"#linux-七种文件类型","children":[]},{"level":2,"title":"创建软连接","slug":"创建软连接","link":"#创建软连接","children":[{"level":3,"title":"Path 与软连接的区别","slug":"path-与软连接的区别","link":"#path-与软连接的区别","children":[]},{"level":3,"title":"使用软连接实现 Path 一样的效果","slug":"使用软连接实现-path-一样的效果","link":"#使用软连接实现-path-一样的效果","children":[]},{"level":3,"title":"查看 python 的软连接信息","slug":"查看-python-的软连接信息","link":"#查看-python-的软连接信息","children":[]}]},{"level":2,"title":"文件权限与数字转换","slug":"文件权限与数字转换","link":"#文件权限与数字转换","children":[{"level":3,"title":"文件权限（字母、数字表示）","slug":"文件权限-字母、数字表示","link":"#文件权限-字母、数字表示","children":[]},{"level":3,"title":"文件权限数字字母转换练习","slug":"文件权限数字字母转换练习","link":"#文件权限数字字母转换练习","children":[]}]}],"git":{"createdTime":1738747875000,"updatedTime":1738747875000,"contributors":[{"name":"AlanShelby","username":"AlanShelby","email":"18866545703@163.com","commits":1,"url":"https://github.com/AlanShelby"}]},"readingTime":{"minutes":2.36,"words":707},"filePathRelative":"Linux/Linux基础/1.5 Linux 文件权限管理.md","localizedDate":"2025年2月5日","autoDesc":true}')}}]);